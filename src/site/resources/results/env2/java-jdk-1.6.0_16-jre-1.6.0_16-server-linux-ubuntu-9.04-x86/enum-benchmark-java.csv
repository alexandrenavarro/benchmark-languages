[EnumTest], Invoke of 2000000 final Number[] numbers = Number.values(), count=20000000, snapshot time,63
[EnumTest], Invoke of 2000000 final Number[] numbers = Number.values(), count=20000000, snapshot time,63
[EnumTest], Invoke of 2000000 final Number[] numbers = Number.values(), count=20000000, snapshot time,63
[EnumTest], Invoke of 2000000 final Number[] numbers = Number.values(), count=20000000, snapshot time,63
[EnumTest], Invoke of 2000000 final Number[] numbers = Number.values(), count=20000000, snapshot time,63
[EnumTest], Invoke of 2000000 final Number[] numbers = Number.values(), count=20000000, snapshot time,63
[EnumTest], Invoke of 2000000 final Number[] numbers = Number.values(), count=20000000, snapshot time,64
[EnumTest], Invoke of 2000000 final Number[] numbers = Number.values(), count=20000000, snapshot time,63
[EnumTest], Invoke of 2000000 final Number[] numbers = Number.values(), count=20000000, snapshot time,63
[EnumTest], Invoke of 2000000 final Number[] numbers = Number.values(), count=20000000, snapshot time,64
[EnumTest], Invoke of 2000000 final Number[] numbers = Number.values(),, average time,63, min time,63, max time,64, relative deviation time,0.0
[EnumTest], Invoke of 10000000 final Number number = Number.valueOf("ONE") switch (number)..., count=10000000, snapshot time,123
[EnumTest], Invoke of 10000000 final Number number = Number.valueOf("ONE") switch (number)..., count=10000000, snapshot time,123
[EnumTest], Invoke of 10000000 final Number number = Number.valueOf("ONE") switch (number)..., count=10000000, snapshot time,123
[EnumTest], Invoke of 10000000 final Number number = Number.valueOf("ONE") switch (number)..., count=10000000, snapshot time,122
[EnumTest], Invoke of 10000000 final Number number = Number.valueOf("ONE") switch (number)..., count=10000000, snapshot time,123
[EnumTest], Invoke of 10000000 final Number number = Number.valueOf("ONE") switch (number)..., count=10000000, snapshot time,123
[EnumTest], Invoke of 10000000 final Number number = Number.valueOf("ONE") switch (number)..., count=10000000, snapshot time,123
[EnumTest], Invoke of 10000000 final Number number = Number.valueOf("ONE") switch (number)..., count=10000000, snapshot time,122
[EnumTest], Invoke of 10000000 final Number number = Number.valueOf("ONE") switch (number)..., count=10000000, snapshot time,123
[EnumTest], Invoke of 10000000 final Number number = Number.valueOf("ONE") switch (number)..., count=10000000, snapshot time,123
[EnumTest], Invoke of 10000000 final Number[] numbers = Number.values(),, average time,122, min time,122, max time,123, relative deviation time,0.0
